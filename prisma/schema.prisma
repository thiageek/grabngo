generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id    String @id @default(uuid())
  name  String
  cpf   String @unique
  email String @unique

  Order Order[]

  @@map("clients")
}

model Product {
  id          String              @id @default(uuid())
  name        String              @unique
  description String
  price       Float
  mediaItems  Media[]
  categories  ProductCategories[]
  Item        Item[]

  @@map("products")
}

model Category {
  id       String              @id @default(uuid())
  name     String              @unique
  products ProductCategories[]

  @@map("categories")
}

model ProductCategories {
  id         String   @id @default(uuid())
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
}

model Media {
  id        String    @id @default(uuid())
  name      String
  url       String    @unique
  productId String
  product   Product   @relation(fields: [productId], references: [id])
  featured  Boolean
  mediaType MediaType

  @@map("images")
}

enum MediaType {
  IMAGE
  PDF
  VIDEO
}

model Order {
  id          String    @id @default(uuid())
  client      Client?   @relation(fields: [clientId], references: [id])
  clientId    String?
  orderNumber Int
  status      String
  createdAt   DateTime
  updatedAt   DateTime?
  Item        Item[]

  @@map("orders")
}

model Item {
  id          String    @id @default(uuid())
  productId   String
  product     Product   @relation(fields: [productId], references: [id])
  order       Order     @relation(fields: [orderId], references: [id])
  orderId     String
  quantity    Int       @default(1)
  observation String?
  createdAt   DateTime
  updatedAt   DateTime?

  @@map("items")
}
